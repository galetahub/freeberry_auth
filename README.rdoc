= FreeberryAuth

== Install

In Gemfile:

  gem 'freeberry_auth', :git => 'git://github.com/galetahub/freeberry_auth.git'
  
Generate migration:

  rails g freeberry_auth:install
  rake db:migrate

== Logger

Use rails default logger:

  FreeberryAuth.logger = Rails.logger
  
or

  require 'logger'
  
  logfile = File.open(Rails.root.join('log', 'freeberry_auth.log'), 'w')
  logfile.sync = true

  FreeberryAuth.logger = Logger.new(logfile)

== Example

  <%= loginza_button_tag("Vote", auth_accounts_url, :class => "loginza") %>
  
== Controller helpers

  current_account    # return nil or FreeberryAuth::Account object
  
  account_signed_in? # return true or false
  
  current_client     # return current_user or current_account
  
  client_signed_in?  # check user_signed_in? or account_signed_in?

You must describe helper method "extract_path_proc". 
This method must return path to redirect with, after success authorization. 
By default it return '/'.

  <%= loginza_button_tag("Vote", auth_accounts_url(:kind => 'post', :id => @post.id), :class => "loginza") %>

  FreeberryAuth.extract_path_proc = Proc.new do |params|
    klass = (params[:kind] || '').to_s.downcase.strip
    record_id = (params[:id] || 0).to_i
    
    case klass
      when 'post' then "/posts/#{record_id}"
      else '/'
    end
  end

Copyright (c) 2010 Brainberry, released under the MIT license
